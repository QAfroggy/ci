# version: 2.1

# jobs:
#   build-and-test:
#     docker:
#       - image: node:latest
#     steps:
#       - checkout
#       - run:
#           name: Install Node.js 18
#           command: |
#             curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
#             source ~/.nvm/nvm.sh
#             nvm install 18
#             node --version
#       - run:
#           name: Install Dependencies
#           command: npm ci
#       - run:
#           name: chromeDriver
#           command: npm i wdio-chromedriver-service
#       - run:
#           name: Run Tests
#           command: npm run test

# workflows:
#   version: 2
#   build-and-test:
#     jobs:
#       - build-and-test
# version: 2.1


# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       - image: circleci/node:16

#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/mongo:3.4.4

#     working_directory: ~/repo

#     steps:
#       - checkout

#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#           - v1-dependencies-{{ checksum "package.json" }}
#           # fallback to using the latest cache if no exact match is found
#           - v1-dependencies-

#       - run: npm install

#       - save_cache:
#           paths:
#             - node_modules
#           key: v1-dependencies-{{ checksum "package.json" }}

#       # run tests!
#       - run: npm test
version: 2.1
name: Node.js CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test (edited) 











